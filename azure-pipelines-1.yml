# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pr: none

pool:
  vmImage: ubuntu-latest
  
variables:
  System.Debug: true

jobs:
- job: CheckReleasepushtoFeeds
  # timeoutInMinutes: 10
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - checkout: self
      persistCredentials: true
      clean: true
    - task: CmdLine@2
      inputs:
        script: |
          # Set GitHub repository details
          repo_owner="Marimuthukumaran"
          repo_name="SampleJarREPO"
          github_token="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"
          
          # GitHub API URL to get releases
          api_url="https://api.github.com/repos/${repo_owner}/${repo_name}/releases"
          
          # Make the HTTP request to GitHub API using curl
          response=$(curl -s -H "Authorization: token ${github_token}" ${api_url})
          
          # Check if the request was successful
          if [[ $? -eq 0 ]]; then
              # Parse the JSON response to extract release information
              release_name=$(echo ${response} | jq -r '.[0].name')
              release_tag=$(echo ${response} | jq -r '.[0].tag_name')
              
              # Output release information
              echo "Latest release: ${release_name} (${release_tag})"
          else
              echo "Failed to retrieve release information. Check your GitHub token and repository details."
          fi
    - task: CmdLine@2
      inputs:
        script: |
          echo Write your commands here
          
          echo Hello world
          cd $(System.ArtifactsDirectory)
          ls
    # - task: ExtractFiles@1
    #   inputs:
    #     archiveFilePatterns: '$(System.ArtifactsDirectory)/*.zip'
    #     destinationFolder: '$(System.ArtifactsDirectory)'
    #     cleanDestinationFolder: true
    #     overwriteExistingFiles: false
    # - task: Maven@4
    #   inputs:
    #     mavenPomFile: '$(System.ArtifactsDirectory)/pom.xml'
    #     publishJUnitResults: false
    #     testResultsFiles: '**/surefire-reports/TEST-*.xml'
    #     javaHomeOption: 'JDKVersion'
    #     jdkVersionOption: '1.17'
    #     mavenVersionOption: 'Default'
    #     mavenAuthenticateFeed: false
    #     effectivePomSkip: false
    #     sonarQubeRunAnalysis: false
    #     goals: 'deploy'
